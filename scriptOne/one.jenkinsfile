
pipeline {
     agent any
     
    parameters {
      string(name: 'branch', defaultValue: 'master', description: 'Build from git branch')
      choice(name: 'env', choices: ['DEVELOPMENT', 'PRODUCTIO'], description: 'Deploy to environment')
	  string(name: 'gradleVersion', defaultValue: '6.5.1')
      booleanParam(name: 'debug', defaultValue: false, description: 'Debug mode')
    }

    stages {
		
		
      stage("Checkout") {
        steps {
          script {
			println "--- CHECKOUT ---"
            if(params.debug) {
				println "Try fetch data from repository branch ${params.branch}"
			}
            git url: 'https://github.com/HalomkoDmytro/TreeContainer.git', branch: params.branch
            
          }
        }
      }
      
      
      stage("Gradle build") {
        steps{
          script{
			GRADLE_VERSION = params.gradleVersion
			if(params.debug) {
				println "--- BUILD ---"
				gradle('-v', params.gradleVersion)
				gradle('task', params.gradleVersion)
			}
			gradle("build", "${params.gradleVersion}");
		  }
        }
        
      }
      
	  stage("Deploy to env") {
		steps {
		  script {
			echo '--- deploy to env ---'
		  }
		}
	  }
	}
}

def gradle(command, version) {
	def GRADLE_HOME = tool name: "gradle-${version}", type: 'hudson.plugins.gradle.GradleInstallation'
    sh "${GRADLE_HOME}/bin/gradle ${command}"
    //sh "${tool name: 'gradle-'{version}, type: 'hudson.plugins.gradle.GradleInstallation'}/bin/gradle ${command}"
}
